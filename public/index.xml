<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>home on Lucas Roesler</title>
    <link>//lucasroesler.com/</link>
    <description>Recent content in home on Lucas Roesler</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 02 Aug 2017 11:00:00 -0400</lastBuildDate>
    
	<atom:link href="//lucasroesler.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>When sequential tests aren&#39;t</title>
      <link>//lucasroesler.com/2019/02/when-sequential-tests-arent/</link>
      <pubDate>Sat, 02 Feb 2019 00:00:00 +0200</pubDate>
      
      <guid>//lucasroesler.com/2019/02/when-sequential-tests-arent/</guid>
      <description>At work we have been expanding the testing coverage of our auth service and have discovered the perfect storm of edge cases around test caching and Go&amp;rsquo;s test building. In short, we had tests that looked like they were passing locally but would fail sporadically in CI because Go will run the tests inside of a package sequentially but build and test each package in parallel (up to the number of CPU cores).</description>
    </item>
    
    <item>
      <title>Golang long-polling: a tale of server timeouts</title>
      <link>//lucasroesler.com/2018/07/golang-long-polling-a-tale-of-server-timeouts/</link>
      <pubDate>Sun, 29 Jul 2018 00:00:00 +0200</pubDate>
      
      <guid>//lucasroesler.com/2018/07/golang-long-polling-a-tale-of-server-timeouts/</guid>
      <description>&lt;p&gt;I recently had a week long battle implementing HTTP long-polling. As so often
happens in long debugging session in software development, my final fix was
one line!&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Reading list</title>
      <link>//lucasroesler.com/reading-list/</link>
      <pubDate>Sat, 27 Jan 2018 00:00:00 -0700</pubDate>
      
      <guid>//lucasroesler.com/reading-list/</guid>
      <description>My Reading List A simple list of books that I am actively reading or have read recently. (Idea shamelessly stolen from Susan J. Fowler)
Currently Reading  The Rise and Fall of D.O.D.O. by Neal Stephenson and Nicole Galland Meditations by Marcus Aurelius  Coming Soon  The Handmaid&amp;rsquo;s Tale by Margaret Atwood The Illiad trans. by Alexander Pope  2017  The Forever War by Joe Haldeman Revenger by Alastair Reynolds Schismatrix Plus by Bruce Sterling The Player of Games by Iain M.</description>
    </item>
    
    <item>
      <title>Struct embedding for custom dev responses</title>
      <link>//lucasroesler.com/2018/01/struct-embedding-for-custom-dev-responses/</link>
      <pubDate>Sat, 27 Jan 2018 00:00:00 -0600</pubDate>
      
      <guid>//lucasroesler.com/2018/01/struct-embedding-for-custom-dev-responses/</guid>
      <description>&lt;p&gt;I had to learn about Go struct embedding the other day and I wanted to document my
fix. In my use case I wanted to add some extra information to an API response to include
some meta data from kubernetes cluster and/or some extra error information.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Deploying a private registry in Docker Swarm</title>
      <link>//lucasroesler.com/2017/10/deploying-a-private-registry-in-docker-swarm/</link>
      <pubDate>Mon, 09 Oct 2017 12:00:00 +0000</pubDate>
      
      <guid>//lucasroesler.com/2017/10/deploying-a-private-registry-in-docker-swarm/</guid>
      <description>&lt;p&gt;At &lt;a href=&#34;https://contiamo.com&#34;&gt;Contiamo&lt;/a&gt; I am currently working a project that will eventually integrate with &lt;a href=&#34;https://www.openfaas.com/&#34;&gt;OpenFaaS&lt;/a&gt;.  I am really excited about this project because we will soon bring some serverless magic to data scientists that use Contiamo.  That is, once I figure out how to deploy a private Docker registry inside a Docker Swarm.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Berlin and Golang</title>
      <link>//lucasroesler.com/2017/08/berlin-and-golang/</link>
      <pubDate>Wed, 02 Aug 2017 11:00:00 -0400</pubDate>
      
      <guid>//lucasroesler.com/2017/08/berlin-and-golang/</guid>
      <description>&lt;p&gt;At the beginning of the month I left &lt;a href=&#34;https://teem.com/&#34;&gt;Teem&lt;/a&gt; I was Director of Engineering and it was and still is a great company.  There are some amazing developers there, so if you are looking for a job in SLC, hit them up.  This weekend (Aug 5) I will be moving to Berlin to start a new role at &lt;a href=&#34;https://www.contiamo.com/&#34;&gt;Contiamo&lt;/a&gt; and will be working on the &lt;a href=&#34;https://docs.contiamo.com/en/labs/&#34;&gt;Labs feature&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Home Brewers Association Ruthless Rye Clone</title>
      <link>//lucasroesler.com/2017/07/home-brewers-association-ruthless-rye-clone/</link>
      <pubDate>Sat, 08 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>//lucasroesler.com/2017/07/home-brewers-association-ruthless-rye-clone/</guid>
      <description>&lt;p&gt;This recipe is inspired by the &lt;a href=&#34;https://www.homebrewersassociation.org/homebrew-recipe/sierra-nevada-ruthless-rye-clone/&#34;&gt;Seirra Nevada Ruthless Rye Clone&lt;/a&gt; written up by the Home Brewers Association.  I have adjusted it to be a partial mash recipe with about 8 lbs of grains.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Salt City Brew Supply Orange Honey Wheat</title>
      <link>//lucasroesler.com/2017/06/salt-city-brew-supply-orange-honey-wheat/</link>
      <pubDate>Sat, 24 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>//lucasroesler.com/2017/06/salt-city-brew-supply-orange-honey-wheat/</guid>
      <description>&lt;p&gt;I just finished my first official &amp;ldquo;summer beer&amp;rdquo; of the year, an Orange Honey Wheat.  This one was inspire by my wife while at the store &amp;ldquo;you should do this one, it uses Utah honey!&amp;rdquo;, thank you &lt;a href=&#34;http://techlady.ninja&#34;&gt;tech lady ninja&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SSL Expiry Quick and Simple</title>
      <link>//lucasroesler.com/2017/06/ssl-expiry-quick-and-simple/</link>
      <pubDate>Sun, 11 Jun 2017 11:00:00 -0600</pubDate>
      
      <guid>//lucasroesler.com/2017/06/ssl-expiry-quick-and-simple/</guid>
      <description>&lt;p&gt;Ever have that feeling you are forgetting something right as you leave work? You are probably thinking about your keys or your lunch box but I am talking about your SSL certificate.  They don&amp;rsquo;t last forever, we know this when we setup SSL but that doesn&amp;rsquo;t stop it from sneaking up on us.  It has happened to the big guys like &lt;a href=&#34;https://thenextweb.com/apps/2015/04/30/oops-instagram-forgot-to-renew-its-ssl-certificate/#.tnw_9kCFpT58&#34;&gt;Instagram&lt;/a&gt; and &lt;a href=&#34;http://www.pcworld.com/article/2906216/expired-google-certificate-temporarily-disrupts-gmail-service.html&#34;&gt;Google&lt;/a&gt;, at &lt;a href=&#34;http://status.teem.com/incidents/ddtys5ss4mw5&#34;&gt;Teem recently&lt;/a&gt;, and of course for myself with my own home server.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Your API&#39;s rat nest</title>
      <link>//lucasroesler.com/2017/06/your-apis-rat-nest/</link>
      <pubDate>Mon, 05 Jun 2017 21:22:00 -0600</pubDate>
      
      <guid>//lucasroesler.com/2017/06/your-apis-rat-nest/</guid>
      <description>&lt;p&gt;Recently, I have seen several articles talking about RESTful API design.  Of
course this is also a common topic of discussion for the engineers at Teem.  I
want to use (and write) APIs that are easy to understand and explain and the
fastest way to complicate your API is nested routes. Just don&amp;rsquo;t do it! Do not
create nested routes in your API.  Let&amp;rsquo;s keep our APIs simple and create one
endpoint per resource and if filters are needs, use GET parameters. This is
simpler to document and simpler to maintain and ultimately, easier to use.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Take Care of Your People</title>
      <link>//lucasroesler.com/2017/05/take-care-of-your-people/</link>
      <pubDate>Sun, 21 May 2017 22:00:00 -0600</pubDate>
      
      <guid>//lucasroesler.com/2017/05/take-care-of-your-people/</guid>
      <description>&lt;p&gt;When I first started this blog, I started with &lt;a href=&#34;//lucasroesler.com/2017/01/my-management-philosophy/&#34;&gt;My Management Philosophy&lt;/a&gt;.  In short,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;be a multiplier for your team and reduce friction&amp;hellip;
Successful managers make other people better at their jobs, “multiplying”
their productivity.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When I wrote this, I was focusing on the ideas as a guide. &amp;ldquo;Should I do X?
Does it multiply my team&amp;rsquo;s effort?  Does it simplify their job?&amp;rdquo; Underlying
this is that good leadership requires &lt;em&gt;empathy&lt;/em&gt; and &lt;em&gt;trust&lt;/em&gt;.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Living Our Culture at Teem via Peer Reviews</title>
      <link>//lucasroesler.com/2017/04/living-our-culture-at-teem-via-peer-reviews/</link>
      <pubDate>Sat, 22 Apr 2017 12:16:11 -0600</pubDate>
      
      <guid>//lucasroesler.com/2017/04/living-our-culture-at-teem-via-peer-reviews/</guid>
      <description>&lt;p&gt;About a year ago we set down to document the core values of the engineering at
Teem. After a lot of discussion we narrowed it to three core ideas&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;maximize positive impact&lt;/li&gt;
&lt;li&gt;communicate&lt;/li&gt;
&lt;li&gt;be a good friend&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I would add one more unofficial value: mentorship and continuous learning.
About the same time we also started thinking about how we describe/define an
engineers career path and we quickly realized that measuring progress is hard
and that measuring commitment to our core values is even harder.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Delete or not to delete</title>
      <link>//lucasroesler.com/2017/04/delete-or-not-to-delete/</link>
      <pubDate>Sun, 02 Apr 2017 00:00:00 -0700</pubDate>
      
      <guid>//lucasroesler.com/2017/04/delete-or-not-to-delete/</guid>
      <description>Should you remove data from the database or simply mark it as deleted? At Teem we have a lot of data that we need to manage and often &amp;ldquo;physically&amp;rdquo; deleting the data from disk can be problematic. Either the users simply wants to undelete something or the deletion would cause problems for a log. The generic solution to this problem is to soft delete/archive the data by adding a deleted_at timestamp field to the table and then filter all queries to hide rows that have been marked as deleted.</description>
    </item>
    
    <item>
      <title>How I Git</title>
      <link>//lucasroesler.com/2017/03/how-i-git/</link>
      <pubDate>Sun, 19 Mar 2017 00:00:00 -0600</pubDate>
      
      <guid>//lucasroesler.com/2017/03/how-i-git/</guid>
      <description>&lt;p&gt;Perhaps the one piece of ubiquitous technology that you will find at any new
tech company is &lt;code&gt;git&lt;/code&gt;.  There are a couple of other technologies that you will
probably find, like AWS, but &lt;code&gt;git&lt;/code&gt; is the only one I expect to find everywhere. It is
also, surprisingly, many developers number one frienemy.  I want to share some
of my favorite tips and tweaks that I have used over the years to make it all
friend and never my enemy.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A spring Hefe</title>
      <link>//lucasroesler.com/2017/03/a-spring-hefe/</link>
      <pubDate>Sun, 05 Mar 2017 00:00:00 -0700</pubDate>
      
      <guid>//lucasroesler.com/2017/03/a-spring-hefe/</guid>
      <description>&lt;p&gt;A traditional Bavarian Hefeweizen: medium body, cloudy, malty, and spicy,
with a smooth mouth-feel and dense, whipped-cream head.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Zero downtime deploys: A tale of Django migrations</title>
      <link>//lucasroesler.com/2017/02/zero-downtime-deploys-a-tale-of-django-migrations/</link>
      <pubDate>Mon, 20 Feb 2017 00:00:00 -0700</pubDate>
      
      <guid>//lucasroesler.com/2017/02/zero-downtime-deploys-a-tale-of-django-migrations/</guid>
      <description>&lt;p&gt;At Teem, we aim for zero down-time deploys; so, one of the most
important things we must validate is that things will not break mid-deploy!&lt;/p&gt;

&lt;p&gt;The most sensitive step of the deploy process is the changes to our database.
Prior to the automation I am about to describe, validation of the database
migrations required specialized knowledge about Postgres, the changes to the
application model, load on the database for that model, and a bit of general
experience. This obviously slows down reviews and subsequently deploys. Worse,
it was simply too easy to miss problem migrations when depending on only peer
reviews. To make our lives easier we created a series of validation checks to
ensure that each database migration will be backwards compatible.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Postgres Joins and Django Querysets</title>
      <link>//lucasroesler.com/2017/02/postgres-joins-and-django-querysets/</link>
      <pubDate>Mon, 06 Feb 2017 20:00:00 +0000</pubDate>
      
      <guid>//lucasroesler.com/2017/02/postgres-joins-and-django-querysets/</guid>
      <description>How do we build a fast API against database models with foreign keys and many- to-many relationships? If you do nothing you get what I call the &amp;ldquo;waterfall of doom&amp;rdquo;. At some point in the past someone told me or I read that &amp;ldquo;joins are effectively free in Postgres&amp;rdquo;. While this might be somewhat true when you are writing all of the SQL and can control every part of your query; I have recently found that when the database gets big enough and you are using the Django ORM, joins aren&amp;rsquo;t free and less can be more!</description>
    </item>
    
    <item>
      <title>My Management Philosophy</title>
      <link>//lucasroesler.com/2017/01/my-management-philosophy/</link>
      <pubDate>Sun, 29 Jan 2017 20:00:00 -0700</pubDate>
      
      <guid>//lucasroesler.com/2017/01/my-management-philosophy/</guid>
      <description>&lt;p&gt;The other day I was having lunch with a friend when he asked what resources I
use to learn about management and tech leadership in general. I will share
some recommendations at the end, but my answer to him got me thinking about
my philosophy around management and how to be good at it, which is what I really
want to share here.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TL;DR: be a multiplier for your team and reduce friction.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Spicy Winter Porter</title>
      <link>//lucasroesler.com/2017/01/spicy-winter-porter/</link>
      <pubDate>Sun, 15 Jan 2017 13:48:19 -0700</pubDate>
      
      <guid>//lucasroesler.com/2017/01/spicy-winter-porter/</guid>
      <description>&lt;p&gt;I just finished my winter beer.  I usually do one dark spicy beer for the winter
season. Last year was the &amp;ldquo;Better Not Pout Stout&amp;rdquo;, this year is the less
excitingly named &amp;ldquo;Spicy Winter Porter&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hello</title>
      <link>//lucasroesler.com/2017/01/hello/</link>
      <pubDate>Sun, 15 Jan 2017 00:00:00 -0700</pubDate>
      
      <guid>//lucasroesler.com/2017/01/hello/</guid>
      <description>&lt;p&gt;Welcome! This is just a test post, a proof of life.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lucas Roesler</title>
      <link>//lucasroesler.com/resume/</link>
      <pubDate>Fri, 21 Jun 2013 11:27:27 -0400</pubDate>
      
      <guid>//lucasroesler.com/resume/</guid>
      <description>Lucas Roesler Salt Lake City, UT 84047
roesler.lucas@gmail.com
https://github.com/LucasRoesler
https://www.linkedin.com/in/lucasroesler/
Technical Skills  Languages: Python, Django, AngularJS, MongoDB, PostgreSQL, PHP, MySQL, HTML, CSS, Javascript, jQuery, R, Bash Applications: Amazon Web Services (AWS), Git, Sage, Mathematica, LaTeX Operating Systems: UNIX/Linux, Mac OS X, Windows  Education Ph.D. in Mathematics, University of Connecticut (UConn), Storrs, Connecticut - May 2012
 Dissertation Title: &amp;ldquo;Algebras from surfaces and their derived equivalences&amp;rdquo; Advisor: Dr. Ralf Schiffler</description>
    </item>
    
  </channel>
</rss>